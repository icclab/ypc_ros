<launch>
    <!-- Detection configuration -->
    <arg name="weights" default="$(find ypc_ros)/src/yolov5/yolov5s-seg.pt"/>
    <arg name="data" default="$(find ypc_ros)/src/yolov5/data/coco128-seg.yaml"/>
    <arg name="confidence_threshold" default="0.75"/>
    <arg name="iou_threshold" default="0.45"/>
    <arg name="maximum_detections" default="1000"/>
    <arg name="device" default="0"/>
    <arg name="agnostic_nms" default="true"/>
    <arg name="line_thickness" default="3"/>
    <arg name="dnn" default="true"/>
    <arg name="half" default="false"/>

    <!-- replace imgsz -->
    <arg name="inference_size_h" default="640"/>
    <arg name="inference_size_w" default="640"/>
    <arg name="threshold_l"      default="30"/>
    <arg name="threshold_u"      default="255"/>

    <!-- Visualize using OpenCV window -->
    <arg name="view_image" default="true"/>
    <!-- Publish images to ros topic -->
    <arg name="publish_image" default="true"/>
    

    <!-- Input data topics -->
    <arg name="input_image_topic" default="/summit_xl/arm_camera/color/image_raw"/>
    <arg name="camera_info_topic" default="/summit_xl/arm_camera/color/camera_info"/>
    <arg name="input_depth_topic" default="/summit_xl/arm_camera/depth/image_raw"/>


    <!-- Module topics-->
    <arg name="ypc_namespace" default="ypc"/>
    <arg name="ypc_scaling"   default="true"/>
    <arg name="output_image_topic" default="/$(arg ypc_namespace)/image"/>
    <arg name="output_mask_topic" default="/$(arg ypc_namespace)/mask"/>
    <arg name="output_depth_topic" default="/$(arg ypc_namespace)/depth"/>  
    <arg name="output_pointcloud_topic" default="/$(arg ypc_namespace)/points"/>
    <arg name="output_camera_info" default="/$(arg ypc_namespace)/camera_info"/>
     
    
    <node pkg="ypc_ros" name="ypc_ros" type="detect.py" output="screen">
        <param name="weights" value="$(arg weights)"/>
        <param name="data" value="$(arg data)"/>
        <param name="confidence_threshold" value="$(arg confidence_threshold)"/>
        <param name="iou_threshold" value="$(arg iou_threshold)" />
        <param name="maximum_detections" value="$(arg maximum_detections)"/>
        <param name="device" value="$(arg device)" />
        <param name="agnostic_nms" value="$(arg agnostic_nms)" />
        <param name="line_thickness" value="$(arg line_thickness)"/>
        <param name="dnn" value="$(arg dnn)"/>
        <param name="half" value="$(arg half)"/>

        <param name="inference_size_h" value="$(arg inference_size_h)"/>
        <param name="inference_size_w" value="$(arg inference_size_w)"/>

        <param name="input_image_topic" value="$(arg input_image_topic)"/>
        
        <param name="view_image" value="$(arg view_image)"/>

        <param name="publish_image" value="$(arg publish_image)"/>
        <param name="output_image_topic" value="$(arg output_image_topic)"/>
        <param name="output_mask_topic" value="$(arg output_mask_topic)"/>
    </node>
   

    <node pkg="ypc_ros" name="cluster" type="cluster.py" output="screen">
        <param name="output_depth_topic" value="$(arg output_depth_topic)"/>
        <param name="output_mask_topic" value="$(arg output_mask_topic)"/>
        <param name="input_depth_topic" value="$(arg input_depth_topic)"/>   
        <param name="view_image" value="$(arg view_image)"/> 
    </node>

    
    <node pkg="ypc_ros" name="camera_info" type="camera_info.py" output="screen">
        <param name="camera_info_topic" value="$(arg camera_info_topic)"/>
        <param name="output_camera_info" value="$(arg output_camera_info)"/>
        <param name="inference_size_h" value="$(arg inference_size_h)"/>
        <param name="inference_size_w" value="$(arg inference_size_w)"/>
    </node>

    <node pkg="nodelet" type="nodelet" name="nodelet_manager" args="manager" />

    
    <node pkg="nodelet" type="nodelet" name="nodelet1"
        args="load depth_image_proc/point_cloud_xyz nodelet_manager">
        <remap from="camera_info" to="$(arg output_camera_info)"/>
        <remap from="image_rect" to="$(arg output_depth_topic)"/>
        <remap from="points" to="$(arg output_pointcloud_topic)"/>
    </node>

    <!-- TODO fix : color pointcloud not working see: https://github.com/ros-perception/image_pipeline/issues/668-->
    <!--
    <node pkg="nodelet" type="nodelet" name="nodelet1"
        args="load depth_image_proc/point_cloud_xyzrgb nodelet_manager">
        <remap from="rgb/camera_info" to="$(arg output_camera_info)"/>
        <remap from="rgb/image_rect_color" to="$(arg output_image_topic)"/>
        <remap from="depth_registered/image_rect" to="$(arg output_depth_topic)"/>
        <remap from="depth_registered/points" to="$(arg output_pointcloud_topic)"/>
    </node> -->
</launch>
